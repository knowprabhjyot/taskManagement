{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/modules/material/material.module.ts","./src/environments/environment.ts","./src/app/components/authentication/signup/signup.component.ts","./src/app/components/authentication/signup/signup.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/task/task.component.ts","./src/app/components/task/task.component.html","./src/app/modules/material/routes/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/authentication/login/login.component.ts","./src/app/components/authentication/login/login.component.html","./src/app/app.module.ts","./src/app/components/authentication/authentication.component.ts","./src/app/components/authentication/authentication.component.html","./src/app/components/add-task/add-task.component.ts","./src/app/components/add-task/add-task.component.html","./src/app/services/task.service.ts","./src/app/services/auth.service.ts","./src/app/services/user.service.ts","./src/app/auth.guard.ts","./src/app/components/add-user/add-user.component.ts","./src/app/components/add-user/add-user.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  user: User;\r\n  constructor(private authService: AuthService,  private router: Router, private snackBar: MatSnackBar, private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.user.subscribe((response) => {\r\n      console.log(response);\r\n      this.user = response;\r\n    });\r\n  }\r\n\r\n  public logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigateByUrl('/login');\r\n    this.snackBar.open('Successfully Logged Out', null, {duration: 2000});\r\n    this.user = null;\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" *ngIf=\"user\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <h3>Hello {{user.name}}</h3>\r\n    <button class=\"menu-button color-primary\" mat-raised-button color=\"accent\" (click)=\"logout()\">Logout</button>    \r\n</mat-toolbar>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule}  from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatDialogModule\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signupFormGroup: FormGroup; \r\n  public hide = true;\r\n  constructor(private authService: AuthService, private router: Router, private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.signupFormGroup = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', Validators.required),\r\n    })\r\n  }\r\n\r\n  public signUp(): void {\r\n    if (this.signupFormGroup.valid) {\r\n      const user = this.signupFormGroup.value;\r\n      this.authService.signUp(user);\r\n      const taskList = this.taskService.getTaskListBasedOnUser();\r\n      this.taskService.taskListSubject.next(taskList);\r\n      this.router.navigateByUrl('');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"login-container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-card class=\"login-card\">\r\n        <mat-card-header class=\"card-header bg-primary\">\r\n            <div>\r\n                <h1>Hey, Welcome. Signup to access Task Management</h1>\r\n            </div>\r\n        </mat-card-header>\r\n        <form [formGroup]=\"signupFormGroup\" (ngSubmit)=\"signUp()\">\r\n            <mat-card-content>\r\n                <div fxLayout=\"column\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input required formControlName=\"name\" matInput placeholder=\"Enter your Name here\">\r\n                        <mat-error *ngIf=\"signupFormGroup.controls['name'].hasError('required')\">\r\n                            Name is <strong>required</strong>\r\n                        </mat-error>\r\n                    <mat-icon color=\"primary\" matPrefix>account_circle</mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input required formControlName=\"email\" matInput placeholder=\"Enter your Email here\">\r\n                        <mat-error *ngIf=\"signupFormGroup.controls['email'].hasError('required')\">\r\n                            Email is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-error\r\n                            *ngIf=\"signupFormGroup.controls['email'].hasError && !signupFormGroup.controls['email'].hasError('required')\">\r\n                            Please enter a valid email address\r\n                        </mat-error>\r\n                        <mat-icon color=\"primary\" matPrefix>email</mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Password</mat-label>\r\n                        <input required formControlName=\"password\" matInput placeholder=\"Enter your password\"\r\n                            [type]=\"hide ? 'password' : 'text'\">\r\n                        <mat-error *ngIf=\"signupFormGroup.controls['password'].hasError('required')\">\r\n                            Password is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-icon color=\"primary\" matPrefix>lock</mat-icon>\r\n                        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n                    </mat-form-field>\r\n                </div>\r\n            </mat-card-content>\r\n            <mat-card-actions fxLayout=\"column\" fxLayoutGap=\"8px\" fxLayoutAlign=\"center center\">\r\n                <button mat-raised-button color=\"primary\">Signup</button>\r\n                <span>Already a Member! <a routerLink=\"/login\">Login</a></span>\r\n            </mat-card-actions>\r\n        </form>\r\n    </mat-card>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { Task } from 'src/app/models/task';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { AddTaskComponent } from '../add-task/add-task.component';\r\nimport { AddUserComponent } from '../add-user/add-user.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  \r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n  public taskList: Task[] = [];\r\n  public userList: User[] = [];\r\n  public taskSubscription: Subscription;\r\n  public userSubscription: Subscription;\r\n  public user: User;\r\n  constructor(private taskService: TaskService, private dialog: MatDialog, private authService: AuthService,\r\n              private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.authService.userValue;\r\n    if (this.user.isAdmin) {\r\n      this.getUserList();\r\n    } else {\r\n      this.getTaskList();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.taskSubscription) {\r\n      this.taskSubscription.unsubscribe();\r\n      this.taskList = [];\r\n    }\r\n  }\r\n\r\n  public getTaskList(): void {\r\n    this.taskSubscription = this.taskService.taskList.subscribe((response) => {\r\n      this.taskList = response;\r\n      console.log(this.taskList);\r\n    })\r\n  }\r\n\r\n  public getUserList(): void {\r\n    this.userSubscription = this.userService.userList.subscribe((response) => {\r\n      this.userList = response;\r\n      const index = this.userList.findIndex((user) => user.isAdmin === true);\r\n      this.userList.splice(index, 1);\r\n    })\r\n  }\r\n\r\n\r\n  public createTask(): void {\r\n    const dialogRef = this.dialog.open(AddTaskComponent, {\r\n      width: '500px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  public addUser(): void {\r\n    const dialogRef = this.dialog.open(AddUserComponent, {\r\n      width: '500'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"full-height\" fxLayout=\"row wrap\" fxLayoutGap=\"16px\" fxLayoutAlign.xs=\"center flex-start\" fxLayoutAlign=\"flex-start flex-start\">\r\n        <div fxFlex=\"20\" fxFlex.xs=\"0 1 calc(100% - 32px)\" fxFlex=\"0 1 calc(25% - 32px)\" fxFlex.sm=\"0 1 calc(50% - 32px)\" fxFlex.lt-md=\"0 1 calc(33.3% - 32px)\"\r\n            class=\"task\" *ngFor=\"let task of taskList\">\r\n            <app-task [task]=\"task\"></app-task>\r\n        </div>\r\n        <div fxFlex=\"20\" fxFlex=\"0 1 calc(25% - 32px)\" fxFlex.lt-md=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-sm=\"0 1 calc(100% - 32px)\"\r\n        class=\"task\" *ngFor=\"let user of userList\">\r\n        <app-user [user]=\"user\"></app-user>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"full-height full-width\" *ngIf=\"(user && !user.isAdmin) && (!taskList || taskList.length === 0)\">\r\n            <span>No Tasks Added Yet</span>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"full-height full-width\" *ngIf=\"user && user.isAdmin && (!userList || userList.length === 0)\">\r\n            <span>No Users Added Yet</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button class=\"add-button\" *ngIf=\"!user.isAdmin\" mat-fab color=\"primary\" (click)=\"createTask()\" aria-label=\"Add Task\">\r\n    <mat-icon>add</mat-icon>\r\n</button>\r\n\r\n<button class=\"add-button\" *ngIf=\"user.isAdmin\" mat-fab color=\"primary\" (click)=\"addUser()\" aria-label=\"Add Task\">\r\n    <mat-icon>add</mat-icon>\r\n</button>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\nimport { Task } from '../../models/task';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.scss']\r\n})\r\nexport class TaskComponent implements OnInit {\r\n  @Input() public task: Task;\r\n  public createTaskFormGroup: FormGroup;\r\n  public isEditable: boolean = false;\r\n  public tempData;\r\n  constructor(private dialog: MatDialog, private taskService: TaskService, private snackBar: MatSnackBar, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tempData = {...this.task};\r\n    this.createTaskFormGroup = new FormGroup({\r\n      title: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required),\r\n    })\r\n  }\r\n\r\n  public editTask(): void {\r\n    this.isEditable = true; \r\n  }\r\n\r\n  public cancel(): void {\r\n    this.isEditable = false;\r\n    this.task = this.tempData;\r\n  }\r\n\r\n  public updateTask(): void {\r\n    const response = this.taskService.updateTask(this.task);\r\n    if (response.status === 201) {\r\n      this.isEditable = false;\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    } else {\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    }\r\n  }\r\n\r\n  public deleteTask(): void {\r\n    const response = this.taskService.deleteTask(this.task.id);\r\n    if (response.status === 200) {\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    }\r\n  }\r\n}\r\n","<mat-card> \r\n    <form class=\"full-width full-height\" [formGroup]=\"createTaskFormGroup\" (ngSubmit)=\"updateTask()\">\r\n        <div *ngIf=\"!isEditable\" fxLayout=\"row\" fxLayoutAlign=\"flex-end\" fxLayoutGap=\"8px\">\r\n            <button mat-mini-fab class=\"fab-icon\" (click)=\"editTask()\">\r\n                <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab color=\"warn\" class=\"fab-icon\" (click)=\"deleteTask()\">\r\n                <mat-icon>delete</mat-icon>\r\n            </button>\r\n        </div>\r\n        <span *ngIf=\"!isEditable\"><h2>{{task.title}}</h2></span>\r\n        <mat-form-field *ngIf=\"isEditable\" class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Title</mat-label>\r\n            <input [(ngModel)]=\"task.title\" required formControlName=\"title\" matInput placeholder=\"Enter Task Title here\">\r\n            <mat-error *ngIf=\"createTaskFormGroup.controls['title'].hasError('required')\">\r\n                Title is <strong>required</strong>\r\n            </mat-error>\r\n        </mat-form-field>\r\n      <div fxLayout=\"column\" fxLayoutAlign=\"space-between space-between\" class=\"full-height\">\r\n        <div>\r\n            <span *ngIf=\"!isEditable\">\r\n                {{task.description}}\r\n            </span>\r\n            <mat-form-field *ngIf=\"isEditable\" class=\"full-width\" appearance=\"outline\">\r\n                <mat-label>Description</mat-label>\r\n                <textarea [(ngModel)]=\"task.description\" required formControlName=\"description\" matInput\r\n                    placeholder=\"Enter Task Description here\"></textarea>\r\n                <mat-error *ngIf=\"createTaskFormGroup.controls['description'].hasError('required')\">\r\n                    Description is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div>\r\n            <!-- <div fxLayout=\"row\" fxLayoutGap=\"8px\" >\r\n                <button color=\"accent\" fxFlex=\"50\" *ngIf=\"!isEditable\" mat-raised-button (click)=\"editTask()\">Edit</button>\r\n                <button color=\"warn\" fxFlex=\"50\" *ngIf=\"!isEditable\" mat-raised-button (click)=\"deleteTask()\">Delete</button>\r\n            </div> -->\r\n            <div *ngIf=\"isEditable\" fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayoutAlign=\"center center\">\r\n                <button type=\"submit\" [disabled]=\"createTaskFormGroup.invalid || !this.createTaskFormGroup.dirty\" mat-raised-button color=\"primary\">Update</button>\r\n                <button (click)=\"cancel()\" mat-raised-button color=\"warn\">Cancel</button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/auth.guard';\r\nimport { LoginComponent } from '../../../components/authentication/login/login.component';\r\nimport { SignupComponent } from '../../../components/authentication/signup/signup.component';\r\nimport { HomeComponent } from '../../../components/home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { User } from './models/user';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor(private authService: AuthService) {\r\n    let userList = this.authService.getUserListFromStorage();\r\n    const admin = userList.find((user) => user.isAdmin === true);\r\n    if (!admin) {\r\n      const newAdmin: User = {\r\n        id: Math.random(),\r\n        name: 'Admin',\r\n        password: '1234',\r\n        isAdmin: true,\r\n        email: 'admin@gmail.com'\r\n      }\r\n      userList.push(newAdmin);\r\n      this.authService.setUserListToLocalStorage(userList);\r\n    }\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TaskService } from 'src/app/services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginFormGroup: FormGroup; \r\n  public hide = true;\r\n  constructor(private authService: AuthService, private router: Router, private snackBar: MatSnackBar, private taskService: TaskService) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.loginFormGroup = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', Validators.required),\r\n    })\r\n  }\r\n\r\n  public login(): void {\r\n    if (this.loginFormGroup.valid) {\r\n      const response = this.authService.login(this.loginFormGroup.value.email, this.loginFormGroup.value.password);\r\n      console.log(response, 'RESPONSE');\r\n      if (response.status === 201) {\r\n        this.router.navigateByUrl('');\r\n        const taskList = this.taskService.getTaskListBasedOnUser();\r\n        console.log(taskList, 'NEW TASK LIST');\r\n        this.taskService.taskListSubject.next(taskList);\r\n      }\r\n      this.snackBar.open(response.message, null, {duration: 2000});\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-card class=\"login-card\">\r\n        <mat-card-header class=\"card-header bg-primary\">\r\n            <div>\r\n                <h1>Hey, Welcome. Login to access Task Management</h1>\r\n            </div>\r\n        </mat-card-header>\r\n        <form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"login()\">\r\n            <mat-card-content>\r\n                <div fxLayout=\"column\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Email</mat-label>\r\n                        <mat-icon color=\"primary\" matPrefix>email</mat-icon>\r\n                        <input required formControlName=\"email\" matInput placeholder=\"Enter your Email here\">\r\n                        <mat-error *ngIf=\"loginFormGroup.controls['email'].hasError('required')\">\r\n                            Email is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"loginFormGroup.controls['email'].hasError && !loginFormGroup.controls['email'].hasError('required')\">\r\n                            Please enter a valid email address\r\n                          </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Password</mat-label>\r\n                        <mat-icon color=\"primary\" matPrefix>lock</mat-icon>\r\n                        <input required formControlName=\"password\" matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n                        <mat-icon color=\"primary\" matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n                        <mat-error *ngIf=\"loginFormGroup.controls['password'].hasError('required')\">\r\n                            Password is <strong>required</strong>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </mat-card-content>\r\n            <mat-card-actions fxLayout=\"column\" fxLayoutGap=\"8px\" fxLayoutAlign=\"center center\">\r\n                <button mat-raised-button color=\"primary\">Login</button>\r\n                <span>Not a Member yet ? <a routerLink=\"/signup\">Sign up</a></span>\r\n            </mat-card-actions>\r\n        </form>\r\n    </mat-card>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './modules/material/routes/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MaterialModule } from './modules/material/material.module';\r\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\r\nimport { SignupComponent } from './components/authentication/signup/signup.component';\r\nimport { LoginComponent } from './components/authentication/login/login.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TaskComponent } from './components/task/task.component';\r\nimport { AddTaskComponent } from './components/add-task/add-task.component';\r\nimport { AddUserComponent } from './components/add-user/add-user.component';\r\nimport { UserComponent } from './components/user/user.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    AuthenticationComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    TaskComponent,\r\n    AddTaskComponent,\r\n    AddUserComponent,\r\n    UserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authentication',\r\n  templateUrl: './authentication.component.html',\r\n  styleUrls: ['./authentication.component.scss']\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>authentication works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-task',\r\n  templateUrl: './add-task.component.html',\r\n  styleUrls: ['./add-task.component.scss']\r\n})\r\nexport class AddTaskComponent implements OnInit {\r\n  createTaskFormGroup: FormGroup;\r\n  public hide = true;\r\n  constructor(private taskService: TaskService, private router: Router, private snackBar: MatSnackBar,\r\n              private authService: AuthService, private dialogRef: MatDialogRef<AddTaskComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createTaskFormGroup = new FormGroup({\r\n      title: new FormControl('', Validators.required),\r\n      description: new FormControl('', Validators.required),\r\n    })\r\n  }\r\n\r\n  public createTask(): void {\r\n    let task = this.createTaskFormGroup.value;\r\n    const user = this.authService.userValue;\r\n    task.userId = user.id;\r\n    const response = this.taskService.createTask(task);\r\n    if (response.status === 201) {\r\n      this.router.navigateByUrl('');\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    } else {\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    }\r\n    this.closeDialog();\r\n  }\r\n\r\n  public closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"login-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <div class=\"full-width\">\r\n        <div class=\"full-width\" fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n            <button color=\"primary\" mat-mini-fab (click)=\"closeDialog()\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <h1>Hey, You can Add your Task Here</h1>\r\n        </div>\r\n    </div>\r\n    <form class=\"full-width\" [formGroup]=\"createTaskFormGroup\" (ngSubmit)=\"createTask()\">\r\n        <div fxLayout=\"column\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                <mat-label>Title</mat-label>\r\n                <input autofocus required formControlName=\"title\" matInput placeholder=\"Enter Task Title here\">\r\n                <mat-error *ngIf=\"createTaskFormGroup.controls['title'].hasError('required')\">\r\n                    Title is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                <mat-label>Description</mat-label>\r\n                <textarea required formControlName=\"description\" matInput\r\n                    placeholder=\"Enter Task Description here\"></textarea>\r\n                <mat-error *ngIf=\"createTaskFormGroup.controls['description'].hasError('required')\">\r\n                    Description is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"8px\" fxLayoutAlign=\"center center\">\r\n            <button class=\"create-button\" [disabled]=\"createTaskFormGroup.invalid\" mat-raised-button color=\"primary\">Create</button>\r\n        </div>\r\n    </form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Task } from '../models/task';\r\nimport { User } from '../models/user';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  public taskList: Observable<Task[]>;\r\n  public taskListSubject: BehaviorSubject<Task[]>;\r\n  public user: User;\r\n  constructor(private authService: AuthService) {\r\n    this.authService.user.subscribe((user) => {\r\n      this.user = user;\r\n    })\r\n    let taskFromStorage = this.getTaskListBasedOnUser();\r\n    this.taskListSubject = new BehaviorSubject<Task[]>(taskFromStorage);\r\n    this.taskList = this.taskListSubject.asObservable();\r\n  }\r\n\r\n  public getTaskListBasedOnUser(): Task[] {\r\n    let taskList = JSON.parse(localStorage.getItem('taskList'));\r\n    if (taskList && this.user) {\r\n      taskList = taskList.filter((task) => task.userId === this.user.id);\r\n    } else {\r\n      taskList = [];\r\n    }\r\n    return taskList;\r\n  }\r\n   \r\n  public set taskValue(taskList) {\r\n    localStorage.setItem('taskList', JSON.stringify(taskList));\r\n    this.taskListSubject.next(taskList);\r\n  }\r\n\r\n  public createTask(task: Task) {\r\n    let taskList =  localStorage.getItem('taskList') ? JSON.parse(localStorage.getItem('taskList')) : null;\r\n    task.id = Math.random();\r\n    task.userId = this.user.id;\r\n    if (taskList) {\r\n      taskList.push(task);\r\n    } else {\r\n      taskList = [task];\r\n    }\r\n    this.taskValue = taskList;\r\n    let xyz = taskList.filter((task) => task.userId === this.user.id);\r\n    this.taskListSubject.next(xyz);\r\n    return {\r\n      status: 201,\r\n      message: 'Task Added Succesfully',\r\n      data: task\r\n    }\r\n  }\r\n\r\n  public updateTask(updatedTask: Task) {\r\n    let taskList = this.getTaskList();\r\n    const index = taskList.findIndex((task) => task.id === updatedTask.id);\r\n    taskList[index] = updatedTask;\r\n    let xyz = taskList.filter((task) => task.userId === this.user.id);\r\n    this.taskListSubject.next(xyz);\r\n    return {\r\n      status: 201,\r\n      message: 'Task Updated Successfully'\r\n    }\r\n  }\r\n\r\n  public getTaskList(): Task[] {\r\n    let taskList =  localStorage.getItem('taskList') ? JSON.parse(localStorage.getItem('taskList')) : null;\r\n    if (!taskList) {\r\n      return []; \r\n    }\r\n    return taskList;\r\n  }\r\n\r\n  public deleteTask(id: number) {\r\n    let taskList = this.getTaskListBasedOnUser();\r\n    let index = taskList.findIndex((task) => task.id === id);\r\n    taskList.splice(index,1);\r\n    this.taskValue = taskList;\r\n    return {\r\n      status: 200,\r\n      message: 'Successfully deleted Task'\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  public user: Observable<User>;\r\n  public userSubject: BehaviorSubject<User>;\r\n\r\n  constructor() { \r\n    this.userSubject = new BehaviorSubject<User>(this.getUSerFromLocalStorage());\r\n    this.user = this.userSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  public getUSerFromLocalStorage(): User {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  public setUserToLocalStorage(user: User): void {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  public getUserListFromLocalStorage(): User[] {\r\n    return JSON.parse(localStorage.getItem('userList'));\r\n  }\r\n\r\n  public setUserListToLocalStorage(userList: User[]): void {\r\n    localStorage.setItem('userList', JSON.stringify(userList));\r\n  }\r\n\r\n  public set userValue(user) {\r\n    this.setUserToLocalStorage(user);\r\n    this.userSubject.next(user);\r\n  }\r\n\r\n  public getUserListFromStorage(): User[] {\r\n    let userList = this.getUserListFromLocalStorage();\r\n    if (!userList) {\r\n      userList = [];\r\n    }\r\n    return userList;\r\n  }\r\n\r\n  public login(email: string, password: string) {\r\n    const userList = this.getUserListFromStorage();\r\n    const user = userList.find((user) => user.email === email && user.password === password);\r\n      if (!user) {\r\n        return {\r\n          status: 500,\r\n          message: 'Email or Password is incorrect'\r\n        };\r\n      }\r\n  \r\n      this.userValue = user;\r\n      return {\r\n        status: 201,\r\n        message: 'Logged in Successfully',\r\n        data: user\r\n      };\r\n  }\r\n\r\n  public signUp(user: User) {\r\n    let userList =  this.getUserListFromStorage();\r\n    user.id = Math.random();\r\n    user.isAdmin = false;\r\n    userList.push(user);\r\n    this.userValue = user;\r\n    localStorage.setItem('userList', JSON.stringify(userList));\r\n  }\r\n\r\n  public logout(): void {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n    this.user = null;\r\n    this.userSubject.next(null);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from '../models/user';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  public userList: Observable<User[]>;\r\n  public userListSubject: BehaviorSubject<User[]>;\r\n  constructor(private authService: AuthService) {\r\n    let userFromStorage = this.getUserListFromStorage();\r\n    this.userListSubject = new BehaviorSubject<User[]>(userFromStorage);\r\n    this.userList = this.userListSubject.asObservable();\r\n   }\r\n\r\n  public createUser(user: User) {\r\n    let userList =  this.authService.getUserListFromStorage();\r\n    user.id = Math.random();\r\n    user.isAdmin = false;\r\n    userList.push(user);\r\n    this.authService.setUserListToLocalStorage(userList);\r\n    this.userListSubject.next(userList);\r\n    return {\r\n      status: 201,\r\n      message: 'User Added Succesfully',\r\n      data: user\r\n    }\r\n  }\r\n\r\n  public getUserListFromStorage(): User[] {\r\n    let userList =  localStorage.getItem('userList') ? JSON.parse(localStorage.getItem('userList')) : [];\r\n    return userList;\r\n  }\r\n\r\n  public updateUser(updatedUser: User) {\r\n    let userList = this.getUserListFromStorage();\r\n    const index = userList.findIndex((user) => user.id === updatedUser.id);\r\n    userList[index] = updatedUser;\r\n    this.userListSubject.next(userList);\r\n    this.authService.setUserListToLocalStorage(userList);\r\n    return {\r\n      status: 201,\r\n      message: 'User Updated Successfully'\r\n    }\r\n  }\r\n\r\n  public deleteUser(id: number) {\r\n    let userList = this.getUserListFromStorage();\r\n    let index = userList.findIndex((user) => user.id === id);\r\n    userList.splice(index,1);\r\n    this.userListSubject.next(userList);\r\n    this.authService.setUserListToLocalStorage(userList);\r\n    return {\r\n      status: 200,\r\n      message: 'Successfully deleted User'\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const user = this.authService.userValue;\r\n    if (user) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigateByUrl('login');\r\n    return false;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.scss']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n  addUserFormGroup: FormGroup;\r\n  public hide = true;\r\n  constructor(private router: Router, private snackBar: MatSnackBar,\r\n              private authService: AuthService, private dialogRef: MatDialogRef<AddUserComponent>,\r\n              private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addUserFormGroup = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', Validators.required)\r\n    })\r\n  }\r\n\r\n  public createUser(): void {\r\n    let user = this.addUserFormGroup.value;\r\n    const response = this.userService.createUser(user);\r\n    if (response.status === 201) {\r\n      this.router.navigateByUrl('');\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    }\r\n    this.closeDialog();\r\n  }\r\n\r\n  public closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"login-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <div class=\"full-width\" fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n        <button class=\"close\" mat-icon-button (click)=\"closeDialog()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div>\r\n        <h1>Hey, You can Add a User Here</h1>\r\n    </div>\r\n    <form class=\"full-width\" [formGroup]=\"addUserFormGroup\" (ngSubmit)=\"createUser()\">\r\n        <div fxLayout=\"column\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                <mat-icon color=\"primary\" matPrefix class=\"mat-icon-pre\">account_circle</mat-icon>\r\n                <mat-label>Name</mat-label>\r\n                <input required formControlName=\"name\" matInput placeholder=\"Enter User's name here\">\r\n                <mat-error *ngIf=\"addUserFormGroup.controls['name'].hasError('required')\">\r\n                    name is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Email</mat-label>\r\n                <input required formControlName=\"email\" matInput placeholder=\"Enter User's Email here\">\r\n                <mat-error *ngIf=\"addUserFormGroup.controls['email'].hasError('required')\">\r\n                    Email is <strong>required</strong>\r\n                </mat-error>\r\n                <mat-error\r\n                    *ngIf=\"addUserFormGroup.controls['email'].hasError && !addUserFormGroup.controls['email'].hasError('required')\">\r\n                    Please enter a valid email address\r\n                </mat-error>\r\n                <mat-icon color=\"primary\" matPrefix class=\"mat-icon-pre\">email</mat-icon>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Password</mat-label>\r\n                <input required formControlName=\"password\" matInput placeholder=\"Enter User's password\"\r\n                    [type]=\"hide ? 'password' : 'text'\">\r\n                <mat-error *ngIf=\"addUserFormGroup.controls['password'].hasError('required')\">\r\n                    Password is <strong>required</strong>\r\n                </mat-error>\r\n                <mat-icon color=\"primary\" matPrefix class=\"mat-icon-pre\">lock</mat-icon>\r\n                <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"8px\" fxLayoutAlign=\"center center\">\r\n            <button class=\"create-button\" [disabled]=\"addUserFormGroup.invalid\" mat-raised-button color=\"primary\">Create</button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  @Input() public user: User;\r\n  public createUserFormGroup: FormGroup;\r\n  public isEditable: boolean = false;\r\n  public tempData;\r\n  constructor(private userService: UserService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tempData = {...this.user};\r\n    this.createUserFormGroup = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email])\r\n    })\r\n  }\r\n\r\n  public editUser(): void {\r\n    this.isEditable = true; \r\n  }\r\n\r\n  public cancel(): void {\r\n    this.isEditable = false;\r\n    this.user = this.tempData;\r\n  }\r\n\r\n  public updateUser(): void {\r\n    const response = this.userService.updateUser(this.user);\r\n    if (response.status === 201) {\r\n      this.isEditable = false;\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    } else {\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    }\r\n  }\r\n\r\n  public deleteUser(): void {\r\n    const response = this.userService.deleteUser(this.user.id);\r\n    if (response.status === 200) {\r\n      this.snackBar.open(response.message, null, { duration: 2000 });\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n    <form class=\"full-width full-height\" [formGroup]=\"createUserFormGroup\" (ngSubmit)=\"updateUser()\">\r\n        <div *ngIf=\"!isEditable\" fxLayout=\"row\" fxLayoutAlign=\"flex-end\" fxLayoutGap=\"8px\">\r\n            <button mat-mini-fab class=\"fab-icon\" (click)=\"editUser()\">\r\n                <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab color=\"warn\" class=\"fab-icon\" (click)=\"deleteUser()\">\r\n                <mat-icon>delete</mat-icon>\r\n            </button>\r\n        </div>\r\n        <span *ngIf=\"!isEditable\"> <h2> {{user.name}}</h2> </span>\r\n        <mat-form-field *ngIf=\"isEditable\" class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Name</mat-label>\r\n            <mat-icon color=\"primary\" matPrefix class=\"mat-icon-pre\">account_circle</mat-icon>\r\n            <input [(ngModel)]=\"user.name\" required formControlName=\"name\" matInput\r\n            placeholder=\"Enter User's name here\">\r\n            <mat-error *ngIf=\"createUserFormGroup.controls['name'].hasError('required')\">\r\n                Name is <strong>required</strong>\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-between space-between\" class=\"full-height\">\r\n            <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"flex-start center\" fxLayoutGap=\"8px\">\r\n                <mat-icon *ngIf=\"!isEditable\" color=\"primary\">email</mat-icon>\r\n                <span *ngIf=\"!isEditable\">\r\n                    {{user.email}}\r\n                </span>\r\n                <mat-form-field *ngIf=\"isEditable\" class=\"full-width\" appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input [(ngModel)]=\"user.email\" required formControlName=\"email\" matInput\r\n                        placeholder=\"Enter your Email here\">\r\n                    <mat-error *ngIf=\"createUserFormGroup.controls['email'].hasError('required')\">\r\n                        Email is <strong>required</strong>\r\n                    </mat-error>\r\n                    <mat-error\r\n                        *ngIf=\"createUserFormGroup.controls['email'].hasError && !createUserFormGroup.controls['email'].hasError('required')\">\r\n                        Please enter a valid email address\r\n                    </mat-error>\r\n                    <mat-icon color=\"primary\" matPrefix class=\"mat-icon-pre\">email</mat-icon>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <div *ngIf=\"isEditable\" fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayoutAlign=\"center center\">\r\n                    <button type=\"submit\" [disabled]=\"createUserFormGroup.invalid || !this.createUserFormGroup.dirty\"\r\n                        mat-raised-button color=\"primary\">Update</button>\r\n                    <button (click)=\"cancel()\" mat-raised-button color=\"warn\">Cancel</button>\r\n                </div>\r\n            </mat-card-actions>\r\n        </div>\r\n    </form>\r\n</mat-card>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}